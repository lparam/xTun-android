apply plugin: 'com.android.application'

if(file('../sign.gradle').exists()) {
    apply from: '../sign.gradle'
} else {
    logger.error('no such file: ../sign.gradle')
}

android {
    compileSdkVersion 32
    buildToolsVersion '32.0.0'
    defaultConfig {
        applicationId "io.github.xTun"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 127
        versionName '1.2.7'

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86"
        }

        externalNativeBuild {
            ndkBuild {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86' //, 'x86_64'
                arguments "-j${Runtime.runtime.availableProcessors()}"
            }
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        abortOnError true
    }
    buildTypes {
        release {
            try {
                signingConfig signingConfigs.release
            } catch (ex) {
                logger.error('signing error: ' + ex)
            }
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                // variant.packageApplicationProvider.get().outputDirectory = new File(project.rootDir.absolutePath + "/apk")
                def fileName
                if (output.name == 'debug') {
                    fileName = "xTun-v${defaultConfig.versionName}-debug.apk"
                } else {
                    fileName = "xTun-v${defaultConfig.versionName}.apk"
                }
                output.outputFileName = fileName
            }
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }
    productFlavors {
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.google.android.material:material:1.5.0'
    api 'androidx.annotation:annotation:1.3.0'
    api 'androidx.appcompat:appcompat:1.4.1'
    api 'androidx.constraintlayout:constraintlayout:2.1.3'
    api 'io.reactivex.rxjava2:rxjava:2.2.10'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'com.github.akarnokd:rxjava2-extensions:0.20.10'
    api 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'
    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
    api('com.mikepenz:materialdrawer:5.8.0@aar') {
        transitive = true
    }
    api "com.mikepenz:iconics-core:2.8.1@aar"
    api 'com.mikepenz:google-material-typeface:3.0.1.2.original@aar'
    api 'dnsjava:dnsjava:3.3.1'
    api 'com.google.code.gson:gson:2.8.6'
    api 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
}
